// This schema represents a package delivery/courier system
datasource db {
  provider = "postgresql" // You can change this to your preferred database provider
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(uuid())
  dni       String    @unique
  cult      String
  name      String
  password  String?
  email     String?
  role      Role?
  cellphone String?
  packages  Package[] @relation("SenderPackages")
  received  Package[] @relation("ReceiverPackages")

  @@map("users")
}

enum Role {
  ADMIN
  USER
  COURIER
}

model Package {
  id                    String            @id @default(uuid())
  size                  String
  weight                Float
  tracking_id           String            @unique
  state                 String
  state_date            DateTime
  creation_date         DateTime          @default(now())
  courier_id            String?
  sender_id             String
  receiver_id           String
  destination_zip_code  String
  destination_street    String
  destination_floor     String
  destination_city      String
  destination_state     String
  destination_country   String
  destination_apartment String?
  destination_btw_st_1  String
  destination_btw_st_2  String
  origin_zip_code       String
  origin_street         String
  origin_floor          String
  origin_city           String
  origin_state          String
  origin_country        String
  origin_apartment      String
  origin_btw_st_1       String
  origin_btw_st_2       String
  details               String?
  units_value           Float
  units_number          Int
  package_type          String
  
  sender                User                @relation("SenderPackages", fields: [sender_id], references: [id])
  receiver              User                @relation("ReceiverPackages", fields: [receiver_id], references: [id])
  courier               Courier?            @relation(fields: [courier_id], references: [id])
  courierPackages       CourierPackage[]
  packageLogs           PackageLog[]

  @@map("packages")
}

model PackageLog {
  id           String   @id @default(uuid())
  package_id   String
  old_package  Json
  new_package  Json
  action       String
  date         DateTime @default(now())
  
  package      Package  @relation(fields: [package_id], references: [id])

  @@map("package_log")
}

model Courier {
  id               String           @id @default(uuid())
  name             String
  packages         Package[]
  courierPackages  CourierPackage[]

  @@map("couriers")
}

model CourierPackage {
  id                String  @id @default(uuid())
  package_id        String
  courier_id        String
  courier_package_id String  @unique
  
  package           Package @relation(fields: [package_id], references: [id])
  courier           Courier @relation(fields: [courier_id], references: [id])

  @@map("couriers_packages")
}